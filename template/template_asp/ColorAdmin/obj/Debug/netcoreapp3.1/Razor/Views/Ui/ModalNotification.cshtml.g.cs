#pragma checksum "/Users/ngunguoksiong/color-admin/admin/template/template_asp/ColorAdmin/Views/Ui/ModalNotification.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "10bdc6523f17359af9d83d4e45e3f821809a8164"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Ui_ModalNotification), @"mvc.1.0.view", @"/Views/Ui/ModalNotification.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/ngunguoksiong/color-admin/admin/template/template_asp/ColorAdmin/Views/_ViewImports.cshtml"
using studio;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/ngunguoksiong/color-admin/admin/template/template_asp/ColorAdmin/Views/_ViewImports.cshtml"
using studio.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"10bdc6523f17359af9d83d4e45e3f821809a8164", @"/Views/Ui/ModalNotification.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"17bd241ee090bd8b39c0cf55b12cb73c6c44cc0b", @"/Views/_ViewImports.cshtml")]
    public class Views_Ui_ModalNotification : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/gritter/css/jquery.gritter.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/gritter/js/jquery.gritter.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/sweetalert/dist/sweetalert.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/demo/ui-modal-notification.demo.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/Users/ngunguoksiong/color-admin/admin/template/template_asp/ColorAdmin/Views/Ui/ModalNotification.cshtml"
  
  ViewData["Title"] = "Modal & Notification";

#line default
#line hidden
#nullable disable
            DefineSection("Styles", async() => {
                WriteLiteral("\r\n\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "10bdc6523f17359af9d83d4e45e3f821809a81645260", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "10bdc6523f17359af9d83d4e45e3f821809a81646538", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "10bdc6523f17359af9d83d4e45e3f821809a81647621", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "10bdc6523f17359af9d83d4e45e3f821809a81648704", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            WriteLiteral(@"

<!-- begin breadcrumb -->
<ol class=""breadcrumb float-xl-right"">
	<li class=""breadcrumb-item""><a href=""javascript:;"">Home</a></li>
	<li class=""breadcrumb-item""><a href=""javascript:;"">UI Elements</a></li>
	<li class=""breadcrumb-item active"">Modal & Notification</li>
</ol>
<!-- end breadcrumb -->
<!-- begin page-header -->
<h1 class=""page-header"">Modal & Notification <small>header small text goes here...</small></h1>
<!-- end page-header -->

<!-- begin row -->
<div class=""row"">
	<!-- begin col-6 -->
	<div class=""col-xl-6"">
		<!-- begin panel -->
		<div class=""panel panel-inverse"" data-sortable-id=""ui-modal-notification-1"">
			<div class=""panel-heading"">
				<h4 class=""panel-title"">Gritter Notifications</h4>
				<div class=""panel-heading-btn"">
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-default"" data-click=""panel-expand""><i class=""fa fa-expand""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-success"" data-click=""panel-reload""><i c");
            WriteLiteral(@"lass=""fa fa-redo""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-warning"" data-click=""panel-collapse""><i class=""fa fa-minus""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-danger"" data-click=""panel-remove""><i class=""fa fa-times""></i></a>
				</div>
			</div>
			<div class=""panel-body"">
				<table class=""table"">
					<thead>
						<tr>
							<th>Description</th>
							<th>Demo</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>Add default notification.</td>
							<td><a href=""javascript:;"" id=""add-regular"" class=""btn btn-sm btn-inverse"">Demo</a></td>
						</tr>
						<tr>
							<td>Add sticky notification</td>
							<td><a href=""javascript:;"" id=""add-sticky"" class=""btn btn-sm btn-primary"">Demo</a></td>
						</tr>
						<tr>
							<td>Add notification without image</td>
							<td><a href=""javascript:;"" id=""add-without-image"" class=""btn btn-sm btn-info"">Demo</a></td>
						</tr>
						<tr>
							<t");
            WriteLiteral(@"d>Add a white notification</td>
							<td><a href=""javascript:;"" id=""add-gritter-light"" class=""btn btn-sm btn-success"">Demo</a></td>
						</tr>
						<tr>
							<td>Add notification (with callbacks)</td>
							<td><a href=""javascript:;"" id=""add-with-callbacks"" class=""btn btn-sm btn-warning"">Demo</a></td>
						</tr>
						<tr>
							<td>Add a sticky notification (with callbacks)</td>
							<td><a href=""javascript:;"" id=""add-sticky-with-callbacks"" class=""btn btn-sm btn-danger"">Demo</a></td>
						</tr>
						<tr>
							<td>Add notification with max of 3</td>
							<td><a href=""javascript:;"" id=""add-max"" class=""btn btn-sm btn-default"">Demo</a></td>
						</tr>
						<tr>
							<td>Remove all notifications</td>
							<td><a href=""javascript:;"" id=""remove-all"" class=""btn btn-sm btn-white"">Demo</a></td>
						</tr>
						<tr>
							<td>Remove all notifications (with callbacks)</td>
							<td><a href=""javascript:;"" id=""remove-all-with-callbacks"" class=""btn btn-sm btn-white"">Demo</a>");
            WriteLiteral(@"</td>
						</tr>
					</tbody>
				</table>
			</div>
		</div>
		<!-- end panel -->
	</div>
	<!-- end col-6 -->
		
	<!-- begin col-6 -->
	<div class=""col-xl-6"">
		<!-- begin panel -->
		<div class=""panel panel-inverse"" data-sortable-id=""ui-modal-notification-2"">
			<div class=""panel-heading"">
				<h4 class=""panel-title"">Modal</h4>
				<div class=""panel-heading-btn"">
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-default"" data-click=""panel-expand""><i class=""fa fa-expand""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-success"" data-click=""panel-reload""><i class=""fa fa-redo""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-warning"" data-click=""panel-collapse""><i class=""fa fa-minus""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-danger"" data-click=""panel-remove""><i class=""fa fa-times""></i></a>
				</div>
			</div>
			<div class=""panel-body"">
				<table class=""table"">
					");
            WriteLiteral(@"<thead>
						<tr>
							<th>Description</th>
							<th>Demo</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>Default Modal Dialog Box.</td>
							<td><a href=""#modal-dialog"" class=""btn btn-sm btn-success"" data-toggle=""modal"">Demo</a></td>
						</tr>
						<tr>
							<td>Modal Dialog Box with fade out animation.</td>
							<td><a href=""#modal-without-animation"" class=""btn btn-sm btn-default"" data-toggle=""modal"">Demo</a></td>
						</tr>
						<tr>
							<td>Modal Dialog Box with full width white background.</td>
							<td><a href=""#modal-message"" class=""btn btn-sm btn-primary"" data-toggle=""modal"">Demo</a></td>
						</tr>
						<tr>
							<td>Modal Dialog Box with alert message.</td>
							<td><a href=""#modal-alert"" class=""btn btn-sm btn-danger"" data-toggle=""modal"">Demo</a></td>
						</tr>
					</tbody>
				</table>
				<!-- #modal-dialog -->
				<div class=""modal fade"" id=""modal-dialog"">
					<div class=""modal-dialog"">
						<div class=""modal-content"">");
            WriteLiteral(@"
							<div class=""modal-header"">
								<h4 class=""modal-title"">Modal Dialog</h4>
								<button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">×</button>
							</div>
							<div class=""modal-body"">
								<p>
									Modal body content here...
								</p>
							</div>
							<div class=""modal-footer"">
								<a href=""javascript:;"" class=""btn btn-white"" data-dismiss=""modal"">Close</a>
								<a href=""javascript:;"" class=""btn btn-success"">Action</a>
							</div>
						</div>
					</div>
				</div>
				<!-- #modal-without-animation -->
				<div class=""modal"" id=""modal-without-animation"">
					<div class=""modal-dialog"">
						<div class=""modal-content"">
							<div class=""modal-header"">
								<h4 class=""modal-title"">Modal Without Animation</h4>
								<button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">×</button>
							</div>
							<div class=""modal-body"">
								Modal body content here...
							</div>
							<div class=""m");
            WriteLiteral(@"odal-footer"">
								<a href=""javascript:;"" class=""btn btn-white"" data-dismiss=""modal"">Close</a>
							</div>
						</div>
					</div>
				</div>
				<!-- #modal-message -->
				<div class=""modal modal-message fade"" id=""modal-message"">
					<div class=""modal-dialog"">
						<div class=""modal-content"">
							<div class=""modal-header"">
								<h4 class=""modal-title"">Modal Message Header</h4>
								<button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">×</button>
							</div>
							<div class=""modal-body"">
								<p>Text in a modal</p>
								<p>Do you want to turn on location services so GPS can use your location ?</p>
							</div>
							<div class=""modal-footer"">
								<a href=""javascript:;"" class=""btn btn-white"" data-dismiss=""modal"">Close</a>
								<a href=""javascript:;"" class=""btn btn-primary"">Save Changes</a>
							</div>
						</div>
					</div>
				</div>
				<!-- #modal-alert -->
				<div class=""modal fade"" id=""modal-alert"">
					<div class=");
            WriteLiteral(@"""modal-dialog"">
						<div class=""modal-content"">
							<div class=""modal-header"">
								<h4 class=""modal-title"">Alert Header</h4>
								<button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">×</button>
							</div>
							<div class=""modal-body"">
								<div class=""alert alert-danger m-b-0"">
									<h5><i class=""fa fa-info-circle""></i> Alert Header</h5>
									<p>Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin commodo. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.</p>
								</div>
							</div>
							<div class=""modal-footer"">
								<a href=""javascript:;"" class=""btn btn-white"" data-dismiss=""modal"">Close</a>
								<a href=""javascript:;"" class=""btn btn-danger"" data-dismiss=""modal"">Action</a>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<!-- end panel -->
		<!-- begin pan");
            WriteLiteral(@"el -->
		<div class=""panel panel-inverse"" data-sortable-id=""ui-modal-notification-3"">
			<div class=""panel-heading"">
				<h4 class=""panel-title"">Bootstrap SweetAlert <span class=""label label-success"">NEW</span></h4>
				<div class=""panel-heading-btn"">
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-default"" data-click=""panel-expand""><i class=""fa fa-expand""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-success"" data-click=""panel-reload""><i class=""fa fa-redo""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-warning"" data-click=""panel-collapse""><i class=""fa fa-minus""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-danger"" data-click=""panel-remove""><i class=""fa fa-times""></i></a>
				</div>
			</div>
			<div class=""panel-body"">
				<p class=""lead m-b-10  text-inverse"">
					SweetAlert for Bootstrap. A beautiful replacement for JavaScript's ""alert""
				</p>
				<hr />
				<p");
            BeginWriteAttribute("class", " class=\"", 9570, "\"", 9578, 0);
            EndWriteAttribute();
            WriteLiteral(@">
					Try any of those!
				</p>
				<a href=""javascript:;"" data-click=""swal-primary"" class=""btn btn-primary"">Primary</a>
				<a href=""javascript:;"" data-click=""swal-info"" class=""btn btn-info"">Info</a>
				<a href=""javascript:;"" data-click=""swal-success"" class=""btn btn-success"">Success</a>
				<a href=""javascript:;"" data-click=""swal-warning"" class=""btn btn-warning"">Warning</a>
				<a href=""javascript:;"" data-click=""swal-danger"" class=""btn btn-danger"">Danger</a>
			</div>
		</div>
		<!-- end panel -->
	</div>
	<!-- end col-6 -->
</div>
<!-- end row -->

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
