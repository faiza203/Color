#pragma checksum "/Users/ngunguoksiong/color-admin/admin/template/template_asp/ColorAdmin/Views/Form/Elements.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bb92c3b24a8445c9f70153b8b199db62b9a25216"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Form_Elements), @"mvc.1.0.view", @"/Views/Form/Elements.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/ngunguoksiong/color-admin/admin/template/template_asp/ColorAdmin/Views/_ViewImports.cshtml"
using studio;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/ngunguoksiong/color-admin/admin/template/template_asp/ColorAdmin/Views/_ViewImports.cshtml"
using studio.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bb92c3b24a8445c9f70153b8b199db62b9a25216", @"/Views/Form/Elements.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"17bd241ee090bd8b39c0cf55b12cb73c6c44cc0b", @"/Views/_ViewImports.cshtml")]
    public class Views_Form_Elements : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/highlight.js/highlight.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/demo/render.highlight.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "POST", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-inline"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/Users/ngunguoksiong/color-admin/admin/template/template_asp/ColorAdmin/Views/Form/Elements.cshtml"
  
  ViewData["Title"] = "Form Elements";

#line default
#line hidden
#nullable disable
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a252165502", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a252166585", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            WriteLiteral(@"
<!-- begin breadcrumb -->
<ol class=""breadcrumb float-xl-right"">
	<li class=""breadcrumb-item""><a href=""javascript:;"">Home</a></li>
	<li class=""breadcrumb-item""><a href=""javascript:;"">Form Stuff</a></li>
	<li class=""breadcrumb-item active"">Form Elements</li>
</ol>
<!-- end breadcrumb -->
<!-- begin page-header -->
<h1 class=""page-header"">Form Elements <small>header small text goes here...</small></h1>
<!-- end page-header -->

<!-- begin row -->
<div class=""row"">
	<!-- begin col-6 -->
	<div class=""col-xl-6"">
		<!-- begin panel -->
		<div class=""panel panel-inverse"" data-sortable-id=""form-stuff-1"">
			<!-- begin panel-heading -->
			<div class=""panel-heading"">
				<h4 class=""panel-title"">Form Controls</h4>
				<div class=""panel-heading-btn"">
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-default"" data-click=""panel-expand""><i class=""fa fa-expand""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-success"" data-click=""panel-reload""><i clas");
            WriteLiteral(@"s=""fa fa-redo""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-warning"" data-click=""panel-collapse""><i class=""fa fa-minus""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-danger"" data-click=""panel-remove""><i class=""fa fa-times""></i></a>
				</div>
			</div>
			<!-- end panel-heading -->
			<!-- begin panel-body -->
			<div class=""panel-body"">
				<div class=""alert alert-muted"">
					Textual form controls—like <code>&lt;input&gt;</code>s, <code>&lt;select&gt;</code>s, and <code>&lt;textarea&gt;</code>s—are styled with the .form-control class. Included are styles for general appearance, focus state, sizing, and more.
				</div>
				");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a252169552", async() => {
                WriteLiteral(@"
					<div class=""form-group row m-b-15"">
						<label class=""col-form-label col-md-3"">Email address</label>
						<div class=""col-md-9"">
							<input type=""email"" class=""form-control m-b-5"" placeholder=""Enter email"" />
							<small class=""f-s-12 text-grey-darker"">We'll never share your email with anyone else.</small>
						</div>
					</div>
					<div class=""form-group row m-b-15"">
						<label class=""col-form-label col-md-3"">Example select</label>
						<div class=""col-md-9"">
							<select class=""form-control"">
								");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521610369", async() => {
                    WriteLiteral("1");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521611381", async() => {
                    WriteLiteral("2");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521612393", async() => {
                    WriteLiteral("3");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521613405", async() => {
                    WriteLiteral("4");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521614417", async() => {
                    WriteLiteral("5");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"form-group row m-b-15\">\r\n\t\t\t\t\t\t<label class=\"col-form-label col-md-3\">Example multiple select</label>\r\n\t\t\t\t\t\t<div class=\"col-md-9\">\r\n\t\t\t\t\t\t\t<select multiple class=\"form-control\">\r\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521615735", async() => {
                    WriteLiteral("1");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521616747", async() => {
                    WriteLiteral("2");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521617759", async() => {
                    WriteLiteral("3");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521618771", async() => {
                    WriteLiteral("4");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\t\t\t\t\t\t\t\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521619783", async() => {
                    WriteLiteral("5");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
							</select>
						</div>
					</div>
					<div class=""form-group row m-b-15"">
						<label class=""col-form-label col-md-3"">Example textarea</label>
						<div class=""col-md-9"">
							<textarea class=""form-control"" rows=""3""></textarea>
						</div>
					</div>
				");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
			</div>
			<!-- end panel-body -->
			<!-- begin hljs-wrapper -->
			<div class=""hljs-wrapper"">
				<pre><code class=""html"">&lt;!-- email --&gt;
&lt;input type=""email"" class=""form-control"" placeholder=""Enter email"" /&gt;

&lt;!-- select --&gt;
&lt;select class=""form-control""&gt;...&lt;/select&gt;

&lt;!-- multiple select --&gt;
&lt;select multiple class=""form-control""&gt;...&lt;/select&gt;

&lt;!-- textarea --&gt;
&lt;textarea class=""form-control"" rows=""3""&gt;&lt;/textarea&gt;</code></pre>
			</div>
			<!-- end hljs-wrapper -->
		</div>
		<!-- end panel -->
							
		<!-- begin panel -->
		<div class=""panel panel-inverse"" data-sortable-id=""form-stuff-2"">
			<!-- begin panel-heading -->
			<div class=""panel-heading"">
				<h4 class=""panel-title"">Readonly</h4>
				<div class=""panel-heading-btn"">
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-default"" data-click=""panel-expand""><i class=""fa fa-expand""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-i");
            WriteLiteral(@"con btn-circle btn-success"" data-click=""panel-reload""><i class=""fa fa-redo""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-warning"" data-click=""panel-collapse""><i class=""fa fa-minus""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-danger"" data-click=""panel-remove""><i class=""fa fa-times""></i></a>
				</div>
			</div>
			<!-- end panel-heading -->
			<!-- begin panel-body -->
			<div class=""panel-body"">
				");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521623620", async() => {
                WriteLiteral(@"
					<div class=""form-group row m-b-15"">
						<label class=""col-sm-3 col-form-label"">Readonly</label>
						<div class=""col-sm-9"">
							<input class=""form-control"" type=""text"" placeholder=""Readonly input here…"" readonly />
						</div>
					</div>
					<div class=""form-group row m-b-15 align-items-center"">
						<label class=""col-sm-3 col-form-label"">Readonly Plaintext</label>
						<div class=""col-sm-9"">
							<input type=""text"" readonly class=""form-control-plaintext"" value=""email@example.com"" />
						</div>
					</div>
					<div class=""form-group row m-b-15"">
						<label class=""col-sm-3 col-form-label"">Password</label>
						<div class=""col-sm-9"">
							<input type=""password"" class=""form-control"" placeholder=""Password"" />
						</div>
					</div>
				");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
			</div>
			<!-- end panel-body -->
			<!-- begin hljs-wrapper -->
			<div class=""hljs-wrapper"">
				<pre><code class=""html"">&lt;!-- form-control-lg --&gt;
&lt;input class=""form-control"" type=""text"" placeholder=""Readonly input here…"" readonly /&gt;

&lt;!-- readonly plaintext --&gt;
&lt;input type=""text"" readonly class=""form-control-plaintext"" value=""email@example.com"" /&gt;

&lt;!-- password --&gt;
&lt;input type=""password"" readonly class=""form-control"" placeholder=""Password"" /&gt;</code></pre>
			</div>
			<!-- end hljs-wrapper -->
		</div>
		<!-- end panel -->
	</div>
	<!-- end col-6 -->
	<!-- begin col-6 -->
	<div class=""col-xl-6"">
		<!-- begin panel -->
		<div class=""panel panel-inverse"" data-sortable-id=""form-stuff-3"">
			<!-- begin panel-heading -->
			<div class=""panel-heading"">
				<h4 class=""panel-title"">Sizing</h4>
				<div class=""panel-heading-btn"">
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-default"" data-click=""panel-expand""><i class=""fa fa-");
            WriteLiteral(@"expand""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-success"" data-click=""panel-reload""><i class=""fa fa-redo""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-warning"" data-click=""panel-collapse""><i class=""fa fa-minus""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-danger"" data-click=""panel-remove""><i class=""fa fa-times""></i></a>
				</div>
			</div>
			<!-- end panel-heading -->
			<!-- begin panel-body -->
			<div class=""panel-body p-t-10"">
				<div class=""row row-space-10"">
					<div class=""col-md-6"">
						<div class=""form-group m-b-10 p-t-5"">
							<input class=""form-control form-control-lg"" type=""text"" placeholder="".form-control-lg"" />
						</div>
						<div class=""form-group m-b-10"">
							<input class=""form-control"" type=""text"" placeholder=""default input"" />
						</div>
						<div class=""form-group m-b-10"">
							<input class=""form-control form-control-sm"" type=""text"" placeholder="".fo");
            WriteLiteral("rm-control-sm\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t<div class=\"form-group m-b-10 p-t-5\">\r\n\t\t\t\t\t\t\t<select class=\"form-control form-control-lg\">\r\n\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521628098", async() => {
                WriteLiteral(".form-control-lg");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"form-group m-b-10\">\r\n\t\t\t\t\t\t\t<select class=\"form-control\">\r\n\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521629216", async() => {
                WriteLiteral("default select");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"form-group m-b-10\">\r\n\t\t\t\t\t\t\t<select class=\"form-control form-control-sm\">\r\n\t\t\t\t\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521630348", async() => {
                WriteLiteral(".form-control-sm");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
							</select>
						</div>
					</div>
				</div>
			</div>
			<!-- end panel-body -->
			<!-- begin hljs-wrapper -->
			<div class=""hljs-wrapper"">
				<pre><code class=""html"">&lt;!-- form-control-lg --&gt;
&lt;input class=""form-control form-control-lg"" type=""text"" /&gt;
&lt;select class=""form-control form-control-lg""&gt;...&lt;/select&gt;

&lt;!-- default --&gt;
&lt;input class=""form-control"" type=""text"" /&gt;
&lt;select class=""form-control""&gt;...&lt;/select&gt;

&lt;!-- form-control-sm --&gt;
&lt;input class=""form-control form-control-sm"" type=""text"" /&gt;
&lt;select class=""form-control form-control-sm""&gt;...&lt;/select&gt;</code></pre>
			</div>
			<!-- end hljs-wrapper -->
		</div>
		<!-- end panel -->
							
		<!-- begin panel -->
		<div class=""panel panel-inverse"" data-sortable-id=""form-stuff-4"">
			<!-- begin panel-heading -->
			<div class=""panel-heading"">
				<h4 class=""panel-title"">Validation</h4>
				<div class=""panel-heading-btn"">
					<a href=""javascript:;"" c");
            WriteLiteral(@"lass=""btn btn-xs btn-icon btn-circle btn-default"" data-click=""panel-expand""><i class=""fa fa-expand""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-success"" data-click=""panel-reload""><i class=""fa fa-redo""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-warning"" data-click=""panel-collapse""><i class=""fa fa-minus""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-danger"" data-click=""panel-remove""><i class=""fa fa-times""></i></a>
				</div>
			</div>
			<!-- end panel-heading -->
			<!-- begin panel-body -->
			<div class=""panel-body"">
				");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521633062", async() => {
                WriteLiteral("\r\n\t\t\t\t\t<div class=\"row form-group m-b-10\">\r\n\t\t\t\t\t\t<label class=\"col-md-3 col-form-label\">Valid Input</label>\r\n\t\t\t\t\t\t<div class=\"col-md-9\">\r\n\t\t\t\t\t\t\t<div class=\"input-group\">\r\n\t\t\t\t\t\t\t\t<div class=\"input-group-prepend\"><span class=\"input-group-text\">");
                WriteLiteral(@"@</span></div>
								<input type=""text"" class=""form-control is-valid"" />
								<div class=""valid-feedback"">Looks good!</div>
							</div>
						</div>
					</div>
					<div class=""row form-group m-b-10"">
						<label class=""col-md-3 col-form-label"">Invalid Input</label>
						<div class=""col-md-9"">
							<div class=""input-group"">
								<div class=""input-group-prepend""><span class=""input-group-text"">");
                WriteLiteral(@"@</span></div>
								<input type=""text"" class=""form-control is-invalid"" />
								<div class=""invalid-feedback"">Please choose a unique and valid username.</div>
							</div>
						</div>
					</div>
					<div class=""row form-group m-b-30"">
						<label class=""col-md-3 col-form-label"">Tooltip Message</label>
						<div class=""col-md-9"">
							<div class=""row row-space-10"">
								<div class=""col-md-6"">
									<div class=""input-group"">
										<div class=""input-group-prepend""><span class=""input-group-text"">");
                WriteLiteral(@"@</span></div>
										<input type=""text"" class=""form-control is-invalid"" />
										<div class=""invalid-tooltip"">Please choose a unique and valid username.</div>
									</div>
								</div>
								<div class=""col-md-6"">
									<div class=""input-group"">
										<div class=""input-group-prepend""><span class=""input-group-text"">");
                WriteLiteral("@</span></div>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control is-valid\" />\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"valid-tooltip\">Looks good!</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
			</div>
			<!-- end panel-body -->
			<!-- begin hljs-wrapper -->
			<div class=""hljs-wrapper"">
				<pre class=""html""><code>&lt;!-- valid --&gt;
&lt;div class=""row form-group m-b-10""&gt;
  &lt;label class=""col-md-3 col-form-label""&gt;Valid Input&lt;/label&gt;
  &lt;div class=""col-md-9""&gt;
    &lt;input type=""text"" class=""form-control is-valid"" /&gt;
    &lt;div class=""valid-feedback""&gt;Looks good!&lt;/div&gt;
    &lt;div class=""valid-tooltip""&gt;Looks good!&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;!-- invalid --&gt;
&lt;div class=""row form-group m-b-10""&gt;
  &lt;label class=""col-md-3 col-form-label""&gt;...&lt;/label&gt;
  &lt;div class=""col-md-9""&gt;
    &lt;input type=""text"" class=""form-control is-invalid"" /&gt;
    &lt;div class=""invalid-feedback""&gt;...&lt;/div&gt;
    &lt;div class=""invalid-tooltip""&gt;...&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
			</div>
			<!-- end hljs-wrapper -->
		</div>
		<!-- end panel -->
	</div>
	<!-- end col-6 -->
</div>
<!--");
            WriteLiteral(@" end row -->
			
<h3 class=""m-b-20"">Checkboxes and Radios</h3>
<!-- begin row -->
<div class=""row"">
	<!-- begin col-6 -->
	<div class=""col-xl-6"">
		<!-- begin panel -->
		<div class=""panel panel-inverse"" data-sortable-id=""form-stuff-5"">
			<!-- begin panel-heading -->
			<div class=""panel-heading"">
				<h4 class=""panel-title"">CSS Checkbox <span class=""label label-success"">NEW</span></h4>
				<div class=""panel-heading-btn"">
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-default"" data-click=""panel-expand""><i class=""fa fa-expand""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-success"" data-click=""panel-reload""><i class=""fa fa-redo""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-warning"" data-click=""panel-collapse""><i class=""fa fa-minus""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-danger"" data-click=""panel-remove""><i class=""fa fa-times""></i></a>
				</div>
			</div>
			<!-- ");
            WriteLiteral("end panel-heading -->\r\n\t\t\t<!-- begin panel-body -->\r\n\t\t\t<div class=\"panel-body\">\r\n\t\t\t\t<div class=\"alert alert-muted fade show\">\r\n\t\t\t\t\tCSS Checkboxes & Radios is <b>not</b> supported in older browser.\r\n\t\t\t\t</div>\r\n\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521638803", async() => {
                WriteLiteral("\r\n\t\t\t\t\t<div class=\"form-group row m-b-10\">\r\n\t\t\t\t\t\t<label class=\"col-md-3 col-form-label\">Default Checkbox</label>\r\n\t\t\t\t\t\t<div class=\"col-md-9\">\r\n\t\t\t\t\t\t\t<div class=\"checkbox checkbox-css\">\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"cssCheckbox1\"");
                BeginWriteAttribute("value", " value=\"", 14106, "\"", 14114, 0);
                EndWriteAttribute();
                WriteLiteral(" checked />\r\n\t\t\t\t\t\t\t\t<label for=\"cssCheckbox1\">CSS Checkbox Label 1</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"checkbox checkbox-css disabled\">\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"cssCheckbox2\"");
                BeginWriteAttribute("value", " value=\"", 14308, "\"", 14316, 0);
                EndWriteAttribute();
                WriteLiteral(" disabled />\r\n\t\t\t\t\t\t\t\t<label for=\"cssCheckbox2\">Disabled State</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"checkbox checkbox-css is-valid\">\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"cssCheckbox3\"");
                BeginWriteAttribute("value", " value=\"", 14505, "\"", 14513, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n\t\t\t\t\t\t\t\t<label for=\"cssCheckbox3\">Success State</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"checkbox checkbox-css is-invalid\">\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"cssCheckbox5\"");
                BeginWriteAttribute("value", " value=\"", 14694, "\"", 14702, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
								<label for=""cssCheckbox5"">Error State</label>
							</div>
						</div>
					</div>
					<div class=""form-group row m-b-10 align-items-center"">
						<label class=""col-md-3 col-form-label"">Inline Checkbox</label>
						<div class=""col-md-9"">
							<div class=""checkbox checkbox-css pt-0 checkbox-inline"">
								<input type=""checkbox""");
                BeginWriteAttribute("value", " value=\"", 15061, "\"", 15069, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"inlineCssCheckbox1\" checked />\r\n\t\t\t\t\t\t\t\t<label for=\"inlineCssCheckbox1\">Checkbox Label 1</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"checkbox checkbox-css pt-0 checkbox-inline\">\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\"");
                BeginWriteAttribute("value", " value=\"", 15283, "\"", 15291, 0);
                EndWriteAttribute();
                WriteLiteral(@" id=""inlineCssCheckbox2"" />
								<label for=""inlineCssCheckbox2"">Checkbox Label 2</label>
							</div>
						</div>
					</div>
					<div class=""form-group row m-b-10"">
						<label class=""col-md-3 col-form-label"">Default Radio</label>
						<div class=""col-md-9"">
							<div class=""radio radio-css"">
								<input type=""radio"" name=""radio_css"" id=""cssRadio1"" checked />
								<label for=""cssRadio1"">Radio option 1</label>
							</div>
							<div class=""radio radio-css disabled"">
								<input type=""radio"" name=""radio_css"" id=""cssRadio2"" disabled />
								<label for=""cssRadio2"">Disabled State</label>
							</div>
							<div class=""radio radio-css is-valid"">
								<input type=""radio"" name=""radio_css"" id=""cssRadio3""");
                BeginWriteAttribute("value", " value=\"", 16045, "\"", 16053, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n\t\t\t\t\t\t\t\t<label for=\"cssRadio3\">Success State</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"radio radio-css is-invalid\">\r\n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"radio_css\" id=\"cssRadio5\"");
                BeginWriteAttribute("value", " value=\"", 16236, "\"", 16244, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
								<label for=""cssRadio5"">Error State</label>
							</div>
						</div>
					</div>
					<div class=""form-group row m-b-10"">
						<label class=""col-md-3 col-form-label"">Inline Radio</label>
						<div class=""col-md-9"">
							<div class=""radio radio-css radio-inline"">
								<input type=""radio"" name=""radio_css_inline"" id=""inlineCssRadio1"" value=""option1"" checked />
								<label for=""inlineCssRadio1"">Radio option 1</label>
							</div>
							<div class=""radio radio-css radio-inline"">
								<input type=""radio"" name=""radio_css_inline"" id=""inlineCssRadio2"" value=""option2"" />
								<label for=""inlineCssRadio2"">Radio option 2</label>
							</div>
						</div>
					</div>
					<div class=""form-group row m-b-10"">
						<label class=""col-md-3 col-form-label"">Checkbox Switcher</label>
						<div class=""col-md-9 p-t-3"">
							<div class=""switcher"">
								<input type=""checkbox"" name=""switcher_checkbox_1"" id=""switcher_checkbox_1""");
                BeginWriteAttribute("checked", " checked=\"", 17221, "\"", 17231, 0);
                EndWriteAttribute();
                WriteLiteral(" value=\"1\">\r\n\t\t\t\t\t\t\t\t<label for=\"switcher_checkbox_1\"></label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"switcher switcher-success\">\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"switcher_checkbox_2\" id=\"switcher_checkbox_2\"");
                BeginWriteAttribute("checked", " checked=\"", 17441, "\"", 17451, 0);
                EndWriteAttribute();
                WriteLiteral(" value=\"1\">\r\n\t\t\t\t\t\t\t\t<label for=\"switcher_checkbox_2\"></label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"switcher switcher-purple\">\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"switcher_checkbox_3\" id=\"switcher_checkbox_3\"");
                BeginWriteAttribute("checked", " checked=\"", 17660, "\"", 17670, 0);
                EndWriteAttribute();
                WriteLiteral(" value=\"1\">\r\n\t\t\t\t\t\t\t\t<label for=\"switcher_checkbox_3\"></label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"switcher switcher-danger\">\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"switcher_checkbox_4\" id=\"switcher_checkbox_4\"");
                BeginWriteAttribute("checked", " checked=\"", 17879, "\"", 17889, 0);
                EndWriteAttribute();
                WriteLiteral(" value=\"1\">\r\n\t\t\t\t\t\t\t\t<label for=\"switcher_checkbox_4\"></label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"switcher switcher-warning\">\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"switcher_checkbox_5\" id=\"switcher_checkbox_5\"");
                BeginWriteAttribute("checked", " checked=\"", 18099, "\"", 18109, 0);
                EndWriteAttribute();
                WriteLiteral(" value=\"1\">\r\n\t\t\t\t\t\t\t\t<label for=\"switcher_checkbox_5\"></label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
			</div>
			<!-- end panel-body -->
			<!-- begin hljs-wrapper -->
			<div class=""hljs-wrapper"">
				<pre><code>&lt;!-- default --&gt;
&lt;div class=""checkbox checkbox-css""&gt;
  &lt;input type=""checkbox"" id=""cssCheckbox1"" checked /&gt;
  &lt;label for=""cssCheckbox1""&gt;Checkbox&lt;/label&gt;
&lt;/div&gt;
&lt;div class=""radio radio-css""&gt;
  &lt;input type=""radio"" id=""cssRadio1"" checked /&gt;
  &lt;label for=""cssRadio1""&gt;Radio&lt;/label&gt;
&lt;/div&gt;

&lt;!-- inline --&gt;
&lt;div class=""checkbox checkbox-css checkbox-inline""&gt;
  &lt;input type=""checkbox"" id=""inlineCssCheckbox1"" checked /&gt;
  &lt;label for=""inlineCssCheckbox1""&gt;Inline Checkbox&lt;/label&gt;
&lt;/div&gt;
&lt;div class=""radio radio-css radio-inline""&gt;
  &lt;input type=""radio"" id=""inlineCssRadio1"" /&gt;
  &lt;label for=""inlineCssRadio1""&gt;Inline Radio&lt;/label&gt;
&lt;/div&gt;

&lt;!-- success state --&gt;
&lt;div class=""checkbox checkbox-css is-valid""&gt;...&lt;/div&gt;
&lt;div class=""checkbox checkb");
            WriteLiteral(@"ox-radio is-valid""&gt;...&lt;/div&gt;

&lt;!-- error state --&gt;
&lt;div class=""checkbox checkbox-radio is-invalid""&gt;...&lt;/div&gt;
&lt;div class=""checkbox checkbox-css is-invalid""&gt;...&lt;/div&gt;

&lt;!-- switcher --&gt;
&lt;div class=""switcher""&gt;
  &lt;input type=""checkbox"" name=""switcher_checkbox_1"" id=""switcher_checkbox_1"" checked="""" value=""1""&gt;
  &lt;label for=""switcher_checkbox_1""&gt;&lt;/label&gt;
&lt;/div&gt;</code></pre>
			</div>
			<!-- end hljs-wrapper -->
		</div>
		<!-- end panel -->
	</div>
	<!-- end col-6 -->
	<!-- begin col-6 -->
	<div class=""col-xl-6"">
		<!-- begin panel -->
		<div class=""panel panel-inverse"" data-sortable-id=""form-stuff-6"">
			<!-- begin panel-heading -->
			<div class=""panel-heading"">
				<h4 class=""panel-title"">Bootstrap Custom Checkbox & Radios <span class=""label label-theme"">NEW</span></h4>
				<div class=""panel-heading-btn"">
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-default"" data-click=""panel-expand""><i cl");
            WriteLiteral(@"ass=""fa fa-expand""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-success"" data-click=""panel-reload""><i class=""fa fa-redo""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-warning"" data-click=""panel-collapse""><i class=""fa fa-minus""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-danger"" data-click=""panel-remove""><i class=""fa fa-times""></i></a>
				</div>
			</div>
			<!-- end panel-heading -->
			<!-- begin panel-body -->
			<div class=""panel-body"">
				");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521649648", async() => {
                WriteLiteral(@"
					<div class=""form-group row"">
						<label class=""col-md-3 col-form-label pt-1"">Custom Checkbox</label>
						<div class=""col-md-9"">
							<div class=""custom-control custom-checkbox mb-1"">
								<input type=""checkbox"" class=""custom-control-input"" id=""customCheck1"">
								<label class=""custom-control-label"" for=""customCheck1"">Check this custom checkbox</label>
							</div>
							<div class=""custom-control custom-checkbox"">
								<input type=""checkbox"" class=""custom-control-input"" disabled id=""customCheck2"">
								<label class=""custom-control-label"" for=""customCheck2"">disabled custom checkbox</label>
							</div>
						</div>
					</div>
					<div class=""form-group row"">
						<label class=""col-md-3 col-form-label pt-1"">Custom Radio</label>
						<div class=""col-md-9"">
							<div class=""custom-control custom-radio mb-1"">
								<input type=""radio"" id=""customRadio1"" name=""customRadio"" class=""custom-control-input"">
								<label class=""custom-control-label"" for=""customRadio1");
                WriteLiteral(@""">Toggle this custom radio</label>
							</div>
							<div class=""custom-control custom-radio"">
								<input type=""radio"" id=""customRadio2"" name=""customRadio"" class=""custom-control-input"">
								<label class=""custom-control-label"" for=""customRadio2"">Or toggle this other custom radio</label>
							</div>
						</div>
					</div>
					<div class=""form-group row mb-0"">
						<label class=""col-md-3 col-form-label pt-1"">Custom Switches</label>
						<div class=""col-md-9"">
							<div class=""custom-control custom-switch mb-1"">
								<input type=""checkbox"" class=""custom-control-input"" id=""customSwitch1"">
								<label class=""custom-control-label"" for=""customSwitch1"">Toggle this switch element</label>
							</div>
							<div class=""custom-control custom-switch"">
								<input type=""checkbox"" class=""custom-control-input"" disabled id=""customSwitch2"">
								<label class=""custom-control-label"" for=""customSwitch2"">Disabled switch element</label>
							</div>
						</div>
					</div>
		");
                WriteLiteral("\t\t");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
			</div>
			<!-- end panel-body -->
			<!-- begin hljs-wrapper -->
			<div class=""hljs-wrapper"">
				<pre><code class=""html"">&lt;!-- begin custom-checkbox --&gt;
&lt;div class=""custom-control custom-checkbox""&gt;
  &lt;input type=""checkbox"" class=""custom-control-input"" id=""customCheck1""&gt;
  &lt;label class=""custom-control-label"" for=""customCheck1""&gt;Check this custom checkbox&lt;/label&gt;
&lt;/div&gt;
&lt;!-- end custom-checkbox --&gt;

&lt;!-- begin custom-radio --&gt;
&lt;div class=""custom-control custom-radio""&gt;
  &lt;input type=""radio"" id=""customRadio1"" name=""customRadio"" class=""custom-control-input""&gt;
  &lt;label class=""custom-control-label"" for=""customRadio1""&gt;Toggle this custom radio&lt;/label&gt;
&lt;/div&gt;
&lt;!-- end custom-radio --&gt;

&lt;!-- begin custom-switches --&gt;
&lt;div class=""custom-control custom-switch""&gt;
  &lt;input type=""checkbox"" class=""custom-control-input"" id=""customSwitch1""&gt;
  &lt;label class=""custom-control-label"" for=""customSwitch1""&gt;");
            WriteLiteral(@"Toggle this switch element&lt;/label&gt;
&lt;/div&gt;
&lt;!-- end custom-switches --&gt;</code></pre>
			</div>
			<!-- end hljs-wrapper -->
		</div>
		<!-- end panel -->
		<!-- begin panel -->
		<div class=""panel panel-inverse"" data-sortable-id=""form-stuff-7"">
			<!-- begin panel-heading -->
			<div class=""panel-heading"">
				<h4 class=""panel-title"">Checkboxes and Radios</h4>
				<div class=""panel-heading-btn"">
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-default"" data-click=""panel-expand""><i class=""fa fa-expand""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-success"" data-click=""panel-reload""><i class=""fa fa-redo""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-warning"" data-click=""panel-collapse""><i class=""fa fa-minus""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-danger"" data-click=""panel-remove""><i class=""fa fa-times""></i></a>
				</div>
			</div>
			<!-- end panel-h");
            WriteLiteral("eading -->\r\n\t\t\t<!-- begin panel-body -->\r\n\t\t\t<div class=\"panel-body\">\r\n\t\t\t\t");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521655359", async() => {
                WriteLiteral("\r\n\t\t\t\t\t<div class=\"form-group row m-b-10\">\r\n\t\t\t\t\t\t<label class=\"col-md-3 col-form-label\">Checkbox</label>\r\n\t\t\t\t\t\t<div class=\"col-md-9\">\r\n\t\t\t\t\t\t\t<div class=\"form-check\">\r\n\t\t\t\t\t\t\t\t<input class=\"form-check-input\" type=\"checkbox\"");
                BeginWriteAttribute("value", " value=\"", 25252, "\"", 25260, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"defaultCheckbox\" />\r\n\t\t\t\t\t\t\t\t<label class=\"form-check-label\" for=\"defaultCheckbox\">Checkbox Label 1</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"form-check\">\r\n\t\t\t\t\t\t\t\t<input class=\"form-check-input\" type=\"checkbox\"");
                BeginWriteAttribute("value", " value=\"", 25478, "\"", 25486, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"disabledCheckbox\" disabled />\r\n\t\t\t\t\t\t\t\t<label class=\"form-check-label\" for=\"disabledCheckbox\">Disabled Checkbox</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"form-check\">\r\n\t\t\t\t\t\t\t\t<input class=\"form-check-input is-valid\" type=\"checkbox\"");
                BeginWriteAttribute("value", " value=\"", 25725, "\"", 25733, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"validCheckbox\" />\r\n\t\t\t\t\t\t\t\t<label class=\"form-check-label\" for=\"validCheckbox\">Valid Checkbox</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"form-check\">\r\n\t\t\t\t\t\t\t\t<input class=\"form-check-input is-invalid\" type=\"checkbox\"");
                BeginWriteAttribute("value", " value=\"", 25956, "\"", 25964, 0);
                EndWriteAttribute();
                WriteLiteral(@" id=""invalidCheckbox"" />
								<label class=""form-check-label"" for=""invalidCheckbox"">Invalid Checkbox</label>
							</div>
						</div>
					</div>
					<div class=""form-group row m-b-10 align-items-center"">
						<label class=""col-md-3 col-form-label"">Inline Checkbox</label>
						<div class=""col-md-9"">
							<div class=""form-check form-check-inline"">
								<input type=""checkbox""");
                BeginWriteAttribute("value", " value=\"", 26363, "\"", 26371, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"checkbox-inline-1\" class=\"form-check-input\" />\r\n\t\t\t\t\t\t\t\t<label class=\"form-check-label\" for=\"checkbox-inline-1\">Checkbox Label 1</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"form-check form-check-inline\">\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\"");
                BeginWriteAttribute("value", " value=\"", 26611, "\"", 26619, 0);
                EndWriteAttribute();
                WriteLiteral(@" id=""checkbox-inline-2"" class=""form-check-input"" />
								<label class=""form-check-label"" for=""checkbox-inline-2"">Checkbox Label 2</label>
							</div>
						</div>
					</div>
					<div class=""form-group row m-b-10"">
						<label class=""col-md-3 col-form-label"">Radio Button</label>
						<div class=""col-md-9"">
							<div class=""form-check"">
								<input class=""form-check-input"" type=""radio"" name=""default_radio"" id=""defaultRadio""");
                BeginWriteAttribute("value", " value=\"", 27068, "\"", 27076, 0);
                EndWriteAttribute();
                WriteLiteral(" checked />\r\n\t\t\t\t\t\t\t\t<label class=\"form-check-label\" for=\"defaultRadio\">Radio option 1</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"form-check\">\r\n\t\t\t\t\t\t\t\t<input class=\"form-check-input\" type=\"radio\" name=\"default_radio\" id=\"disabledDefaultRadio\"");
                BeginWriteAttribute("value", " value=\"", 27320, "\"", 27328, 0);
                EndWriteAttribute();
                WriteLiteral(@" disabled />
								<label class=""form-check-label"" for=""disabledDefaultRadio"">Disabled Radio</label>
							</div>
							<div class=""form-check"">
								<input class=""form-check-input is-valid"" type=""radio"" name=""default_radio"" id=""validDefaultRadio""");
                BeginWriteAttribute("value", " value=\"", 27587, "\"", 27595, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n\t\t\t\t\t\t\t\t<label class=\"form-check-label\" for=\"validDefaultRadio\">Success State</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"form-check\">\r\n\t\t\t\t\t\t\t\t<input class=\"form-check-input is-invalid\" type=\"radio\" name=\"default_radio\" id=\"invalidDefaultRadio\"");
                BeginWriteAttribute("value", " value=\"", 27845, "\"", 27853, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
								<label class=""form-check-label"" for=""invalidDefaultRadio"">Error State</label>
							</div>
						</div>
					</div>
					<div class=""form-group row m-b-10 align-items-center"">
						<label class=""col-md-3 col-form-label"">Inline Radio Button</label>
						<div class=""col-md-9"">
							<div class=""form-check form-check-inline"">
								<input class=""form-check-input"" type=""radio"" name=""radio_default_inline"" id=""defaultInlineRadio1""");
                BeginWriteAttribute("value", " value=\"", 28309, "\"", 28317, 0);
                EndWriteAttribute();
                WriteLiteral(@" checked />
								<label class=""form-check-label"" for=""defaultInlineRadio1"">Radio option 1</label>
							</div>
							<div class=""form-check form-check-inline"">
								<input class=""form-check-input"" type=""radio"" name=""radio_default_inline"" id=""defaultInlineRadio2""");
                BeginWriteAttribute("value", " value=\"", 28592, "\"", 28600, 0);
                EndWriteAttribute();
                WriteLiteral(" />\r\n\t\t\t\t\t\t\t\t<label class=\"form-check-label\" for=\"defaultInlineRadio2\">Radio option 2</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
			</div>
			<!-- end panel-body -->
			<!-- begin hljs-wrapper -->
			<div class=""hljs-wrapper"">
				<pre><code class=""html"">&lt;!-- default --&gt;
&lt;div class=""form-check""&gt;
  &lt;input type=""checkbox"" class=""form-check-input"" id=""defaultCheckbox"" /&gt;
  &lt;label class=""form-check-label"" for=""defaultCheckbox""&gt;...&lt;label&gt;
&lt;/div&gt;
&lt;div class=""form-check""&gt;
  &lt;input class=""form-check-input"" type=""radio"" id=""defaultRadio"" checked /&gt;
  &lt;label class=""form-check-label"" for=""defaultRadio""&gt;...&lt;/label&gt;
&lt;/div&gt;

&lt;!-- inline --&gt;
&lt;div class=""form-check form-check-inline""&gt;
  ...
&lt;/div&gt;

&lt;!-- valid state --&gt;
&lt;div class=""form-check""&gt;
  &lt;input class=""form-check-input is-valid"" /&gt;
  &lt;label class=""form-check-label""&gt;...&lt;/label&gt;
&lt;/div&gt;

&lt;!-- invalid state --&gt;
&lt;div class=""form-check""&gt;
  &lt;input class=""form-check-input is-invalid"" /&gt;
  &lt;label class=""form-check-label""&gt;...&lt;/lab");
            WriteLiteral(@"el&gt;
&lt;/div&gt;</code></pre>
			</div>
			<!-- end hljs-wrapper -->
		</div>
		<!-- end panel -->
	</div>
	<!-- end col-6 -->
</div>
<!-- end row -->

<h3 class=""m-b-20"">Input Group</h3>
<!-- begin row -->
<div class=""row"">
	<!-- begin col-6 -->
	<div class=""col-xl-6"">
		<!-- begin panel -->
		<div class=""panel panel-inverse"" data-sortable-id=""form-stuff-8"">
			<!-- begin panel-heading -->
			<div class=""panel-heading"">
				<h4 class=""panel-title"">Input Group</h4>
				<div class=""panel-heading-btn"">
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-default"" data-click=""panel-expand""><i class=""fa fa-expand""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-success"" data-click=""panel-reload""><i class=""fa fa-redo""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-warning"" data-click=""panel-collapse""><i class=""fa fa-minus""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-danger""");
            WriteLiteral(@" data-click=""panel-remove""><i class=""fa fa-times""></i></a>
				</div>
			</div>
			<!-- end panel-heading -->
			<!-- begin panel-body -->
			<div class=""panel-body"">
				<div class=""input-group m-b-10"">
					<div class=""input-group-prepend""><span class=""input-group-text"">");
            WriteLiteral(@"@</span></div>
					<input type=""text"" class=""form-control"" placeholder=""Username"" />
				</div>
				<div class=""input-group m-b-10"">
					<input type=""text"" class=""form-control"" />
					<div class=""input-group-append""><span class=""input-group-text""><i class=""fa fa-calendar""></i></span></div>
				</div>
				<div class=""input-group m-b-10"">
					<div class=""input-group-prepend""><span class=""input-group-text"">$</span></div>
					<input type=""text"" class=""form-control"" />
					<div class=""input-group-append""><span class=""input-group-text"">.00</span></div>
				</div>
				<div class=""input-group m-b-10"">
					<div class=""input-group-prepend"">
						<span class=""input-group-text""><input type=""checkbox"" /></span>
					</div>
					<input type=""text"" class=""form-control"" placeholder=""Checkbox add on"" />
				</div>
				<div class=""input-group m-b-10"">
					<div class=""input-group-prepend"">
						<span class=""input-group-text""><input type=""radio"" /></span>
					</div>
					<input type=""text"" class=");
            WriteLiteral(@"""form-control"" placeholder=""Radio button add on"" />
				</div>
				<div class=""input-group m-b-10"">
					<div class=""input-group-prepend"">
						<button type=""button"" class=""btn btn-primary"">Action</button>
						<button type=""button"" class=""btn btn-primary"" data-toggle=""dropdown"">
							<span class=""caret""></span>
						</button>
						<div class=""dropdown-menu"">
							<a href=""#"" class=""dropdown-item"">Action</a>
							<a href=""#"" class=""dropdown-item"">Another action</a>
							<a href=""#"" class=""dropdown-item"">Something else here</a>
							<div class=""dropdown-divider""></div>
							<a href=""#"" class=""dropdown-item"">Separated link</a>
						</div>
					</div>
					<input type=""text"" class=""form-control"" />
					<div class=""input-group-append"">
						<div class=""dropdown-menu dropdown-menu-right"">
							<a href=""#"" class=""dropdown-item"">Action</a>
							<a href=""#"" class=""dropdown-item"">Another action</a>
							<a href=""#"" class=""dropdown-item"">Something else here</a>
							<div");
            WriteLiteral(@" class=""dropdown-divider""></div>
							<a href=""#"" class=""dropdown-item"">Separated link</a>
						</div>
						<button type=""button"" class=""btn btn-yellow dropdown-toggle"" data-toggle=""dropdown"">
							<span class=""caret""></span>
						</button>
						<button type=""button"" class=""btn btn-yellow no-caret"">Action</button>
					</div>
				</div>
			</div>
			<!-- end panel-body -->
			<!-- begin hljs-wrapper -->
			<div class=""hljs-wrapper"">
				<pre><code class=""html"">&lt;div class=""input-group""&gt;
  &lt;span class=""input-group-prepend""&gt;$&lt;/span&gt;
  &lt;input type=""text"" class=""form-control"" /&gt;
  &lt;span class=""input-group-append""&gt;.00&lt;/span&gt;
&lt;/div&gt;

&lt;div class=""input-group""&gt;
  &lt;input type=""text"" class=""form-control""&gt;
  &lt;div class=""input-group-append""&gt;
    &lt;button type=""button"" class=""btn btn-yellow"" data-toggle=""dropdown""&gt;
      &lt;span class=""caret""&gt;&lt;/span&gt;
    &lt;/button&gt;
    &lt;button type=""button"" class=""btn btn-yel");
            WriteLiteral(@"low dropdown-toggle no-caret""&gt;
      Action
    &lt;/button&gt;
    &lt;ul class=""dropdown-menu dropdown-menu-right""&gt;
      ...
    &lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
			</div>
			<!-- end hljs-wrapper -->
		</div>
		<!-- end panel -->
	</div>
	<!-- end col-6 -->
	<!-- begin col-6 -->
	<div class=""col-xl-6"">
		<!-- begin panel -->
		<div class=""panel panel-inverse"" data-sortable-id=""form-stuff-9"">
			<!-- begin panel-heading -->
			<div class=""panel-heading"">
				<h4 class=""panel-title"">Input Group Sizing</h4>
				<div class=""panel-heading-btn"">
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-default"" data-click=""panel-expand""><i class=""fa fa-expand""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-success"" data-click=""panel-reload""><i class=""fa fa-redo""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-warning"" data-click=""panel-collapse""><i class=""fa fa-minus""></i></a>
					<a hr");
            WriteLiteral(@"ef=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-danger"" data-click=""panel-remove""><i class=""fa fa-times""></i></a>
				</div>
			</div>
			<!-- end panel-heading -->
			<!-- begin panel-body -->
			<div class=""panel-body"">
				<div class=""input-group input-group-lg m-b-10"">
					<div class=""input-group-prepend""><span class=""input-group-text"">");
            WriteLiteral("@</span></div>\r\n\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"input-group m-b-10\">\r\n\t\t\t\t\t<div class=\"input-group-prepend\"><span class=\"input-group-text\">");
            WriteLiteral("@</span></div>\r\n\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"input-group input-group-sm m-b-10\">\r\n\t\t\t\t\t<div class=\"input-group-prepend\"><span class=\"input-group-text\">");
            WriteLiteral(@"@</span></div>
					<input type=""text"" class=""form-control"" placeholder=""Username"" />
				</div>
			</div>
			<!-- end panel-body -->
			<!-- begin hljs-wrapper -->
			<div class=""hljs-wrapper"">
				<pre><code class=""html"">&lt;!-- input-group-lg --&gt;
&lt;div class=""input-group input-group-lg""&gt;...&lt;/div&gt;

&lt;!-- default --&gt;
&lt;div class=""input-group""&gt;...&lt;/div&gt;

&lt;!-- input-group-sm --&gt;
&lt;div class=""input-group input-group-sm""&gt;...&lt;/div&gt;</code></pre>
			</div>
			<!-- end hljs-wrapper -->
		</div>
		<!-- end panel -->
	</div>
	<!-- end col-6 -->
</div>
<!-- end row -->

<h3 class=""m-b-20"">Form Style</h3>
<!-- begin row -->
<div class=""row"">
	<!-- begin col-6 -->
	<div class=""col-xl-6"">
		<!-- begin panel -->
		<div class=""panel panel-inverse"" data-sortable-id=""form-stuff-10"">
			<!-- begin panel-heading -->
			<div class=""panel-heading"">
				<h4 class=""panel-title"">Default Style</h4>
				<div class=""panel-heading-btn"">
					<a href=""javas");
            WriteLiteral(@"cript:;"" class=""btn btn-xs btn-icon btn-circle btn-default"" data-click=""panel-expand""><i class=""fa fa-expand""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-success"" data-click=""panel-reload""><i class=""fa fa-redo""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-warning"" data-click=""panel-collapse""><i class=""fa fa-minus""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-danger"" data-click=""panel-remove""><i class=""fa fa-times""></i></a>
				</div>
			</div>
			<!-- end panel-heading -->
			<!-- begin panel-body -->
			<div class=""panel-body"">
				");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521672197", async() => {
                WriteLiteral(@"
					<fieldset>
						<legend class=""m-b-15"">Legend</legend>
						<div class=""form-group"">
							<label for=""exampleInputEmail1"">Email address</label>
							<input type=""email"" class=""form-control"" id=""exampleInputEmail1"" placeholder=""Enter email"" />
						</div>
						<div class=""form-group"">
							<label for=""exampleInputPassword1"">Password</label>
							<input type=""password"" class=""form-control"" id=""exampleInputPassword1"" placeholder=""Password"" />
						</div>
						<div class=""checkbox checkbox-css m-b-20"">
							<input type=""checkbox"" id=""nf_checkbox_css_1"" />
							<label for=""nf_checkbox_css_1"">Check me out</label>
						</div>
						<button type=""submit"" class=""btn btn-sm btn-primary m-r-5"">Login</button>
						<button type=""submit"" class=""btn btn-sm btn-default"">Cancel</button>
					</fieldset>
				");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
			</div>
			<!-- end panel-body -->
			<!-- begin hljs-wrapper -->
			<div class=""hljs-wrapper"">
				<pre class=""html""><code>&lt;div class=""form-group""&gt;
  &lt;label&gt;...&lt;/label&gt;
  &lt;input type=""text"" class=""form-control"" /&gt;
&lt;/div&gt;</code></pre>
			</div>
			<!-- end hljs-wrapper -->
		</div>
		<!-- end panel -->
	</div>
	<!-- end col-6 -->
	<!-- begin col-6 -->
	<div class=""col-xl-6"">
		<!-- begin panel -->
		<div class=""panel panel-inverse"" data-sortable-id=""form-stuff-11"">
			<!-- begin panel-heading -->
			<div class=""panel-heading"">
				<h4 class=""panel-title"">Form Horizontal</h4>
				<div class=""panel-heading-btn"">
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-default"" data-click=""panel-expand""><i class=""fa fa-expand""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-success"" data-click=""panel-reload""><i class=""fa fa-redo""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-warn");
            WriteLiteral(@"ing"" data-click=""panel-collapse""><i class=""fa fa-minus""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-danger"" data-click=""panel-remove""><i class=""fa fa-times""></i></a>
				</div>
			</div>
			<!-- end panel-heading -->
			<!-- begin panel-body -->
			<div class=""panel-body"">
				");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521676006", async() => {
                WriteLiteral(@"
					<fieldset>
						<legend class=""m-b-15"">Legend</legend>
						<div class=""form-group row m-b-15"">
							<label class=""col-md-3 col-form-label"">Email address</label>
							<div class=""col-md-7"">
								<input type=""email"" class=""form-control"" placeholder=""Enter email"" />
							</div>
						</div>
						<div class=""form-group row m-b-15"">
							<label class=""col-md-3 col-form-label"">Password</label>
							<div class=""col-md-7"">
								<input type=""password"" class=""form-control"" placeholder=""Password"" />
							</div>
						</div>
						<div class=""form-group row m-b-15"">
							<div class=""col-md-7 offset-md-3"">
								<div class=""checkbox checkbox-css"">
									<input type=""checkbox"" id=""fh_checkbox_css_1"" />
									<label for=""fh_checkbox_css_1"">Check me out</label>
								</div>
							</div>
						</div>
						<div class=""form-group row"">
							<div class=""col-md-7 offset-md-3"">
								<button type=""submit"" class=""btn btn-sm btn-primary m-r-5"">Login</button>
			");
                WriteLiteral("\t\t\t\t\t<button type=\"submit\" class=\"btn btn-sm btn-default\">Cancel</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</fieldset>\r\n\t\t\t\t");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
			</div>
			<!-- end panel-body -->
			<!-- begin hljs-wrapper -->
			<div class=""hljs-wrapper"">
				<pre class=""html""><code>&lt;div class=""form-group row m-b-15""&gt;
  &lt;label class=""col-md-3 col-form-label""&gt;...&lt;/label&gt;
  &lt;div class=""col-md-7""&gt;
    &lt;input type=""text"" class=""form-control"" placeholder="""" /&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
			</div>
			<!-- end hljs-wrapper -->
		</div>
		<!-- end panel -->
	</div>
	<!-- end col-6 -->
</div>
<!-- end row -->
<!-- begin row -->
<div class=""row"">
	<!-- begin col-12 -->
	<div class=""col-12"">
		<!-- begin panel -->
		<div class=""panel panel-inverse"" data-sortable-id=""form-stuff-12"">
			<!-- begin panel-heading -->
			<div class=""panel-heading"">
				<h4 class=""panel-title"">Inline Form</h4>
				<div class=""panel-heading-btn"">
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-default"" data-click=""panel-expand""><i class=""fa fa-expand""></i></a>
					<a href=""javascript:;"" class=""btn btn-");
            WriteLiteral(@"xs btn-icon btn-circle btn-success"" data-click=""panel-reload""><i class=""fa fa-redo""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-warning"" data-click=""panel-collapse""><i class=""fa fa-minus""></i></a>
					<a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-danger"" data-click=""panel-remove""><i class=""fa fa-times""></i></a>
				</div>
			</div>
			<!-- end panel-heading -->
			<!-- begin panel-body -->
			<div class=""panel-body"">
				");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb92c3b24a8445c9f70153b8b199db62b9a2521680372", async() => {
                WriteLiteral(@"
					<div class=""form-group m-r-10"">
						<input type=""email"" class=""form-control"" id=""exampleInputEmail2"" placeholder=""Enter email"" />
					</div>
					<div class=""form-group m-r-10"">
						<input type=""password"" class=""form-control"" id=""exampleInputPassword2"" placeholder=""Password"" />
					</div>
					<div class=""form-check m-r-10"">
						<input class=""form-check-input"" id=""inline_form_checkbox"" type=""checkbox"" />
						<label class=""form-check-label"" for=""inline_form_checkbox"">Remember me</label>
					</div>
					<button type=""submit"" class=""btn btn-sm btn-primary m-r-5"">Sign in</button>
					<button type=""submit"" class=""btn btn-sm btn-default"">Register</button>
				");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
			</div>
			<!-- end panel-body -->
			<!-- begin hljs-wrapper -->
			<div class=""hljs-wrapper"">
				<pre class=""html""><code>&lt;form class=""form-inline""&gt;
  ...
&lt;/form&gt;</code></pre>
			</div>
			<!-- end hljs-wrapper -->
		</div>
		<!-- end panel -->
	</div>
	<!-- end col-6 -->
</div>
<!-- end row -->
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
